
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA DIVIDE ELSE EQQUAL EQUALS FOR IF LARGE LOOP LPAREN LRGEQ MINUS NAME NOTEQ NUMBER PLUS POWER RPAREN SMALL SMLEQ SQRT TIMESstatement : expressionstatement : FOR NAME LOOP NUMBER NUMBER COLON NAME EQUALS NAME PLUS NUMBER\n                 | FOR NAME LOOP NUMBER NUMBER COLON NAME EQUALS NAME MINUS NUMBER\n                 | FOR NAME LOOP NUMBER NUMBER COLON NAME EQUALS NAME TIMES NUMBER\n                 | FOR NAME LOOP NUMBER NUMBER COLON NAME EQUALS NAME DIVIDE NUMBER\n                 | FOR NAME LOOP NUMBER NUMBER COLON NAME EQUALS NAME POWER NUMBER\n                 | FOR NAME LOOP NUMBER NUMBER COLON NAME EQUALS NAME SQRT NUMBER\n    statement : IF comparison COLON NAME EQUALS expression \n              | IF comparison COLON NAME EQUALS expression ELSE COLON NAME EQUALS expression\n    expression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term POWER factorterm : term SQRT factorterm : factorfactor : NUMBERfactor : LPAREN expression RPARENfactor : NAME EQUALS factorfactor : NAMEcomparison : factor EQQUAL factor\n                  | factor NOTEQ factor\n                  | factor LARGE factor\n                  | factor SMALL factor \n                  | factor LRGEQ factor \n                  | factor SMLEQ factor\n            '
    
_lr_action_items = {'FOR':([0,],[3,]),'IF':([0,],[6,]),'NUMBER':([0,6,9,10,11,13,16,17,18,19,23,26,27,28,29,30,31,37,46,55,56,57,58,59,60,61,],[5,5,5,5,5,5,5,5,5,5,37,5,5,5,5,5,5,45,5,62,63,64,65,66,67,5,]),'LPAREN':([0,6,9,10,11,13,16,17,18,19,26,27,28,29,30,31,46,61,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'NAME':([0,3,6,9,10,11,13,16,17,18,19,25,26,27,28,29,30,31,46,47,51,52,61,],[4,12,4,4,4,4,4,4,4,4,4,38,4,4,4,4,4,4,4,49,53,54,4,]),'$end':([1,2,4,5,7,8,21,22,24,32,33,34,35,36,48,62,63,64,65,66,67,68,],[0,-1,-21,-18,-12,-17,-10,-11,-20,-13,-14,-15,-16,-19,-8,-2,-3,-4,-5,-6,-7,-9,]),'PLUS':([2,4,5,7,8,20,21,22,24,32,33,34,35,36,48,53,68,],[10,-21,-18,-12,-17,10,-10,-11,-20,-13,-14,-15,-16,-19,10,55,10,]),'MINUS':([2,4,5,7,8,20,21,22,24,32,33,34,35,36,48,53,68,],[11,-21,-18,-12,-17,11,-10,-11,-20,-13,-14,-15,-16,-19,11,56,11,]),'EQUALS':([4,38,49,54,],[13,46,51,61,]),'TIMES':([4,5,7,8,21,22,24,32,33,34,35,36,53,],[-21,-18,16,-17,16,16,-20,-13,-14,-15,-16,-19,57,]),'DIVIDE':([4,5,7,8,21,22,24,32,33,34,35,36,53,],[-21,-18,17,-17,17,17,-20,-13,-14,-15,-16,-19,58,]),'POWER':([4,5,7,8,21,22,24,32,33,34,35,36,53,],[-21,-18,18,-17,18,18,-20,-13,-14,-15,-16,-19,59,]),'SQRT':([4,5,7,8,21,22,24,32,33,34,35,36,53,],[-21,-18,19,-17,19,19,-20,-13,-14,-15,-16,-19,60,]),'EQQUAL':([4,5,15,24,36,],[-21,-18,26,-20,-19,]),'NOTEQ':([4,5,15,24,36,],[-21,-18,27,-20,-19,]),'LARGE':([4,5,15,24,36,],[-21,-18,28,-20,-19,]),'SMALL':([4,5,15,24,36,],[-21,-18,29,-20,-19,]),'LRGEQ':([4,5,15,24,36,],[-21,-18,30,-20,-19,]),'SMLEQ':([4,5,15,24,36,],[-21,-18,31,-20,-19,]),'RPAREN':([4,5,7,8,20,21,22,24,32,33,34,35,36,],[-21,-18,-12,-17,36,-10,-11,-20,-13,-14,-15,-16,-19,]),'ELSE':([4,5,7,8,21,22,24,32,33,34,35,36,48,],[-21,-18,-12,-17,-10,-11,-20,-13,-14,-15,-16,-19,50,]),'COLON':([4,5,14,24,36,39,40,41,42,43,44,45,50,],[-21,-18,25,-20,-19,-22,-23,-24,-25,-26,-27,47,52,]),'LOOP':([12,],[23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,9,46,61,],[2,20,48,68,]),'term':([0,9,10,11,46,61,],[7,7,21,22,7,7,]),'factor':([0,6,9,10,11,13,16,17,18,19,26,27,28,29,30,31,46,61,],[8,15,8,8,8,24,32,33,34,35,39,40,41,42,43,44,8,8,]),'comparison':([6,],[14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expression','20201213.py',9),
  ('statement -> FOR NAME LOOP NUMBER NUMBER COLON NAME EQUALS NAME PLUS NUMBER','statement',11,'p_statement_for','20201213.py',12),
  ('statement -> FOR NAME LOOP NUMBER NUMBER COLON NAME EQUALS NAME MINUS NUMBER','statement',11,'p_statement_for','20201213.py',13),
  ('statement -> FOR NAME LOOP NUMBER NUMBER COLON NAME EQUALS NAME TIMES NUMBER','statement',11,'p_statement_for','20201213.py',14),
  ('statement -> FOR NAME LOOP NUMBER NUMBER COLON NAME EQUALS NAME DIVIDE NUMBER','statement',11,'p_statement_for','20201213.py',15),
  ('statement -> FOR NAME LOOP NUMBER NUMBER COLON NAME EQUALS NAME POWER NUMBER','statement',11,'p_statement_for','20201213.py',16),
  ('statement -> FOR NAME LOOP NUMBER NUMBER COLON NAME EQUALS NAME SQRT NUMBER','statement',11,'p_statement_for','20201213.py',17),
  ('statement -> IF comparison COLON NAME EQUALS expression','statement',6,'p_statement_if','20201213.py',34),
  ('statement -> IF comparison COLON NAME EQUALS expression ELSE COLON NAME EQUALS expression','statement',11,'p_statement_if','20201213.py',35),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','20201213.py',46),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','20201213.py',49),
  ('expression -> term','expression',1,'p_expression_term','20201213.py',52),
  ('term -> term TIMES factor','term',3,'p_term_times','20201213.py',55),
  ('term -> term DIVIDE factor','term',3,'p_term_div','20201213.py',58),
  ('term -> term POWER factor','term',3,'p_term_power','20201213.py',61),
  ('term -> term SQRT factor','term',3,'p_term_cuberoot','20201213.py',64),
  ('term -> factor','term',1,'p_term_factor','20201213.py',67),
  ('factor -> NUMBER','factor',1,'p_factor_num','20201213.py',70),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','20201213.py',73),
  ('factor -> NAME EQUALS factor','factor',3,'p_assign','20201213.py',76),
  ('factor -> NAME','factor',1,'p_name','20201213.py',79),
  ('comparison -> factor EQQUAL factor','comparison',3,'p_comparison','20201213.py',87),
  ('comparison -> factor NOTEQ factor','comparison',3,'p_comparison','20201213.py',88),
  ('comparison -> factor LARGE factor','comparison',3,'p_comparison','20201213.py',89),
  ('comparison -> factor SMALL factor','comparison',3,'p_comparison','20201213.py',90),
  ('comparison -> factor LRGEQ factor','comparison',3,'p_comparison','20201213.py',91),
  ('comparison -> factor SMLEQ factor','comparison',3,'p_comparison','20201213.py',92),
]
